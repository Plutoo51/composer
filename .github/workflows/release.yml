name: Composer Release

on:
  push:
    tags:
      - v*
    
concurrency:
  group: "release-${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  muto-coverage:
    uses: ./.github/workflows/muto-coverage.yml

  tag_release_artifacts:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    name: collect version tag release
    runs-on: ubuntu-latest
    needs:
      - muto-coverage
    permissions: write-all

    steps:
      - name: Download test coverage report
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-xml
          path: dist/coverage/
      
      - name: Upload test coverage to release
        uses: svenstaro/upload-release-action@v2
        id: upload_test_coverage_report
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/coverage/coverage.xml
          tag: ${{ github.ref }}
          overwrite: true

      - name: Collect quality artifacts
        uses: eclipse-dash/quevee@v1
        id: quevee
        with:
          release_url: "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          artifacts_requirements: <>
          artifacts_testing: ${{ steps.upload_test_coverage_report.outputs.browser_download_url }}
          artifacts_documentation: "https://eclipse-muto.github.io/docs/docs/muto/"
          artifacts_coding_guidelines: "https://github.com/eclipse-muto/composer/blob/main/CODING_GUIDELINES.md"
          artifacts_release_process: <>
      - name: Upload quality manifest to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.quevee.outputs.manifest_file }}
          tag: ${{ github.ref }}
